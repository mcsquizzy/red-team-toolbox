#!/bin/bash
# Exploitation

####################
# Global variables #
####################

DEPENDENCIES="toilet"

# colors and text
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
# bold
BRED='\033[1;31m'
BGREEN='\033[1;32m'
BBLUE='\033[1;34m'

NC="\033[0m" # No Color
BOLD=$(tput bold)
NORMAL=$(tput sgr0)

#############
# Functions #
#############

# Create banners
function fuBANNER {
  echo
  toilet -tf standard "$1" -F metal
  echo
}

# Print output title
function fuTITLE {
  echo
  echo -e "${BBLUE}════════════════════════════════════════════════════════════════════════"
  echo -e "${BGREEN} $1 ${BBLUE}"
  echo -e "════════════════════════════════════════════════════════════════════════${NC}"
}

# Print info line
function fuINFO {
  echo
  echo -e "${BBLUE}═══${BGREEN} $1 ${NC}"
}

# Print message line
function fuMESSAGE {
  echo -e "${BBLUE}---${NC} $1 ${NC}"
}

# Check for root permissions
function fuGOT_ROOT {
fuINFO "Checking for root"
if [ "$(whoami)" != "root" ]; then
  echo "[ NOT OK ]"
  echo "### Please run as root"
  echo "### Example: sudo $0"
  exit
else
  echo "[ OK ]"
fi
}

# Install dependencies
function fuGET_DEPS {
  fuINFO "Upgrading packages"
  apt -y update
  fuINFO "Installing dependencies"
  apt -y install $DEPENDENCIES
}


####################################
# Check for command line arguments #
####################################

if [ "$1" == "" ]; then
  echo "forgot the command line arguments. Try --help"
  exit
fi
for i in "$@"
  do
    case $i in
      --conf=*)
        myCONF_FILE="${i#*=}"
        shift
      ;;
      --help)
        echo "Usage: $0 <options>"
        echo
        echo "--conf=<Path to \"exploitation.conf\">"
	      echo "  Use this to execute the exploitation phase."
        echo "  A configuration example is available in \"exploitation/exploitation.conf.dist\"."
        echo
	    exit
      ;;
      *)
	    exit
      ;;
    esac
  done

# Validate command line arguments and load config
# If a valid config file exists, load the configuration
if [ "$myCONF_FILE" == "" ]; then
  echo "Aborting. No configuration file given. Additionally try --conf"
  exit
fi
if [ -s "$myCONF_FILE" ] && [ "$myCONF_FILE" != "" ]; then
  if [ "$(head -n 1 $myCONF_FILE | grep -c "# exploitation")" == "1" ]; then
    source "$myCONF_FILE"
  else
	  echo "Aborting. Config file \"$myCONF_FILE\" not a exploitation configuration file."
    exit
fi
elif ! [ -s "$myCONF_FILE" ] && [ "$myCONF_FILE" != "" ]; then
  echo "Aborting. Config file \"$myCONF_FILE\" not found."
  exit
fi

#####################
# Checking for root #
#####################

fuGOT_ROOT

################################
# Installation of Dependencies #
################################

fuGET_DEPS

############################
# Check configuration file #
############################

if [ "$BRUTEFORCE" == true ] || [ "$SEARCHEXPLOIT" == true ]; then
  fuTITLE "Following parts will be executed:"
  if [ "$SEARCHEXPLOIT" == true ]; then
  fuMESSAGE "Search Exploits"
  fi
  if [ "$BRUTEFORCE" == true ]; then
  fuMESSAGE "Brute Force"
  fi
else
  fuTITLE "No main variable in $myCONF_FILE set to true. Nothing to do."
  fuINFO "Specify your configuration in $myCONF_FILE and run script again."
  echo
  exit
fi

###################
# Search Exploits #
###################

if [ "$SEARCHEXPLOIT" == true ]; then
  fuBANNER "Search Exploits ..."
  source ./parts/search-exploit.sh
fi

###############
# Brute Force #
###############

if [ "$BRUTEFORCE" == true ] && [ "$USERNAME" != "" ]; then
  fuBANNER "Brute Force Passwords ..."
  source ./parts/brute-force.sh

elif [ "$BRUTEFORCE" == true ] && [ "$USERNAME" == "" ]; then
  fuBANNER "Brute Force Passwords ..."
  fuMESSAGE "Attention!!! No username set in $myCONF_FILE"
  source ./parts/brute-force.sh
fi

##############
# Next Steps #
##############

# Checking config file
if [ "$BRUTEFORCE" == true ] || [ "$SEARCHEXPLOIT" == true ]; then
  
  fuBANNER "Next Steps To Do ..."

  if [ -s "$myEXPLOITFILE" ]; then
    fuINFO "Search the $myEXPLOITFILE file for a suitable exploit and apply it"
  fi

  if [ "$BRUTEFORCE" == true ]; then
  fuMESSAGE "Search the directory \"output/\" for possible passwords and apply it"
  fi

  fuMESSAGE "If you where lucky enough to detect a remote code execution vulnerability on the target system, checkout the README.md file for possible reverse shells"
  echo
fi
