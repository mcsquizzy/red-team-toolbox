#!/bin/bash
# Gather Vulnerability Information

####################
# Global variables #
####################

DEPENDENCIES="git nmap nikto"
myVULNFILE="output/vuln-findings.txt"

#############
# Functions #
#############

function fuNmapVulnersScan {
  # Note that it is already included into the standard nmap NSE library.
  # it only works with -sV flag.
  fuTITLE "Nmap vulnerability scan with vulners script of $1 and port $2 ..."
  nmap -Pn -sV --script vulners -oN $myVULNFILE $* $SPOOFINGPARAMETERS 
}

function fuNiktoScan {
  fuTITLE "Scanning webserver vulnerabilities of $1 ..."
  nikto -h $1 -port $2 $3 -o $myVULNFILE
}

################################
# Installation of Dependencies #
################################

fuGET_DEPS

###########################
# Create output directory #
###########################

fuINFO "creating \"output/\" directory"
mkdir output && echo "[ OK ]"

##########################
# Vulnerability Scanning #
##########################

# nmap 
# vuln + nmap-vulners

if [ "$IP" != "" ] && [ "$TCPPORT" != "" ] && [ "$UDPPORT" != "" ]; then
  fuNmapVulnersScan $IP -p$TCPPORT,$UDPPORT

elif [ "$IP" != "" ] && [ "$TCPPORT" != "" ] && [ "$UDPPORT" == "" ]; then
  fuNmapVulnersScan $IP -p$TCPPORT

elif [ "$IP" != "" ] && [ "$TCPPORT" == "" ] && [ "$UDPPORT" != "" ]; then
  fuNmapVulnersScan $IP -p$UDPPORT

elif [ "$IP" != "" ] && [ "$TCPPORT" == "" ] && [ "$UDPPORT" == "" ] && [ -s targetPort.txt ]; then
  # change newlines to comma separated
  fuNmapVulnersScan $IP -p$(tr '\n' , <targetPort.txt)

fi


# nikto
# if ports 80 and 433 open...
if [ "$IP" != "" ] && ( grep -q -w 443 "targetPort.txt" || [ "$TCPPORT" == "443" ] ); then
  fuNiktoScan $IP 443 -ssl
  
elif [ "$DOMAIN" != "" ] && ( grep -q -w 443 "targetPort.txt" || [ "$TCPPORT" == "443" ] ); then
  fuNiktoScan $DOMAIN 443 -ssl

elif [ "$IP" != "" ] && ( grep -q -w 80 "targetPort.txt" || [ "$TCPPORT" == "80" ] ); then
  fuNiktoScan $IP 80
  
elif [ "$DOMAIN" != "" ] && ( grep -q -w 80 "targetPort.txt" || [ "$TCPPORT" == "80" ] ); then
  fuNiktoScan $DOMAIN 80

fi


# TODO... needed?
# WMAP
# https://www.offensive-security.com/metasploit-unleashed/wmap-web-scanner/


# VNC Authentication
# metasploit
if [ "$IP" != "" ] && ( grep -q -w 5900 "targetPort.txt" || [ "$TCPPORT" == "5900" ] ); then
  fuTITLE "Looking for target $IP if a VNC Server is running ..."
  msfdb init
  msfconsole -x "use auxiliary/scanner/vnc/vnc_none_auth; set rhost $IP; run; exit" -q -o output/vuln-findings-vnc.txt
  
elif [ "$IP" != "" ] && ( grep -q -w 5800 "targetPort.txt" || [ "$TCPPORT" == "5800" ] ); then
  fuTITLE "Looking for target $IP if a VNC Server is running ..."
  msfdb init
  msfconsole -x "use auxiliary/scanner/vnc/vnc_none_auth; set rhost $IP; set rport 5800; run; exit" -q -o output/vuln-findings-vnc.txt

#elif [ "$IP" == "" ] && [ "$IPRANGE" != "" ]; then
#  fuTITLE "Looking for targets that are running a VNC Server ..."
#  msfdb init
#  msfconsole -x "use auxiliary/scanner/vnc/vnc_none_auth; set rhost $IPRANGE; run; exit" -q -o output/vuln-findings-vnc.txt

fi


#####################
# Summarize results #
#####################

fuTITLE "Findings in following files:"
if [ -s "$myVULNFILE" ]; then
  fuINFO "Vulnerabilities found in: $myVULNFILE"
else
  fuINFO "No vulnerabilites found."
fi
echo