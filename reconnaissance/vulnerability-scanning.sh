#!/bin/bash
# Gather Vulnerability Information

####################
# Global variables #
####################

DEPENDENCIES="git nmap nikto"
myVULNFILE="vuln-infos.txt"

#############
# Functions #
#############

function fuNmapVulnScan {
  fuMESSAGE "Nmap vulnerability scan with vuln script of $1 and port $2 ..."
  nmap -Pn --script vuln $1 -p $2 -oN $myVULNFILE
}

function fuNmapVulnersScan {
  # https://github.com/vulnersCom/nmap-vulners
  fuMESSAGE "Cloning nmap-vulners script ..."
  git clone -q https://github.com/vulnersCom/nmap-vulners.git /usr/share/nmap/scripts/nmap-vulners/
  nmap --script-updatedb
  fuMESSAGE "Nmap vulnerability scan with vulners script of $1 and port $2 ..."
  nmap -Pn --script nmap-vulners/ $1 -p $2 -oN $myVULNFILE
}

function fuNiktoVulnScan {
  fuMESSAGE "Scanning webserver vulnerabilities of $1 ..."
  nikto -h $1 -port $2 $3 -o $myVULNFILE
}

################################
# Installation of Dependencies #
################################

fuGET_DEPS

##########################
# Vulnerability Scanning #
##########################

# nmap 
# vuln + nmap-vulners

if [ "$IP" != "" ] && [ "$TCPPORT" != "" ] && [ "$UDPPORT" != "" ]; then
  fuNmapVulnScan $IP $TCPPORT,$UDPPORT

elif [ "$IP" != "" ] && [ "$TCPPORT" != "" ] && [ "$UDPPORT" == "" ]; then
  fuNmapVulnScan $IP $TCPPORT

elif [ "$IP" != "" ] && [ "$TCPPORT" == "" ] && [ "$UDPPORT" != "" ]; then
  fuNmapVulnScan $IP $UDPPORT

elif [ "$IP" != "" ] && [ "$TCPPORT" == "" ] && [ "$UDPPORT" == "" ] && [ "$PORTRANGE" == "" ] && [ -s targetPort.txt ]; then
  # check if targetPort is not empty 
  # scan only ports from targetPort.txt 
  # change newlines to comma separated
  fuNmapVulnScan $IP $(tr '\n' , <targetPort.txt)

#elif [ "$IP" != "" ] && [ "$TCPPORT" == "" ] && [ "$UDPPORT" == "" ] && [ "$PORTRANGE" != "" ]; then
#  fuNmapVulnScan $IP $PORTRANGE

fi


# nikto
# if ports 80 and 433 open...
if [ "$IP" != "" ] && ( grep -q -w 443 "targetPort.txt" || [ "$TCPPORT" == "443" ] ); then
  fuNiktoVulnScan $IP 443 -ssl
  
elif [ "$DOMAIN" != "" ] && ( grep -q -w 443 "targetPort.txt" || [ "$TCPPORT" == "443" ] ); then
  fuNiktoVulnScan $DOMAIN 443 -ssl

elif [ "$IP" != "" ] && ( grep -q -w 80 "targetPort.txt" || [ "$TCPPORT" == "80" ] ); then
  fuNiktoVulnScan $IP 80
  
elif [ "$DOMAIN" != "" ] && ( grep -q -w 80 "targetPort.txt" || [ "$TCPPORT" == "80" ] ); then
  fuNiktoVulnScan $DOMAIN 80

fi

